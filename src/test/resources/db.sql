DROP TABLE IF EXISTS CDS;
CREATE TABLE CDS (
  CD_ID numeric(20) NOT NULL,
  PRIMARY KEY (CD_ID)
);


INSERT INTO CDS (CD_ID) VALUES (11);
INSERT INTO CDS (CD_ID) VALUES (12);
INSERT INTO CDS (CD_ID) VALUES (21);
INSERT INTO CDS (CD_ID) VALUES (37);
INSERT INTO CDS (CD_ID) VALUES (41);
INSERT INTO CDS (CD_ID) VALUES (42);

DROP TABLE IF EXISTS COLUMNS_V2;
CREATE TABLE COLUMNS_V2 (
  CD_ID numeric(20) NOT NULL,
  COMMENT varchar(256) DEFAULT NULL,
  COLUMN_NAME varchar(128) NOT NULL,
  TYPE_NAME varchar(4000) NOT NULL,
  INTEGER_IDX integer NOT NULL,
  PRIMARY KEY (CD_ID,COLUMN_NAME)
);


INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (11,NULL,'code','string',0);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (11,NULL,'description','string',1);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (11,NULL,'salary','int',3);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (11,NULL,'total_emp','int',2);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (12,NULL,'code','string',0);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (12,NULL,'description','string',1);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (12,NULL,'salary','int',3);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (12,NULL,'total_emp','int',2);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (21,NULL,'col1','int',0);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (21,NULL,'col2','string',1);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (21,NULL,'col3','string',2);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (37,NULL,'col1','int',0);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (37,NULL,'col2','string',1);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (37,NULL,'col3','string',2);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (41,NULL,'code','string',0);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (41,NULL,'description','string',1);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (41,NULL,'salary','int',3);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (41,NULL,'total_emp','int',2);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (42,NULL,'code','string',0);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (42,NULL,'description','string',1);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (42,NULL,'salary','int',3);
INSERT INTO COLUMNS_V2 (CD_ID, COMMENT, COLUMN_NAME, TYPE_NAME, INTEGER_IDX) VALUES (42,NULL,'total_emp','int',2);

DROP TABLE IF EXISTS DBS;
CREATE TABLE DBS (
  DB_ID numeric(20) NOT NULL,
  DESC varchar(4000)  DEFAULT NULL,
  DB_LOCATION_URI varchar(4000)  NOT NULL,
  NAME varchar(128)  DEFAULT NULL,
  PRIMARY KEY (DB_ID)
);


INSERT INTO DBS (DB_ID, DESC, DB_LOCATION_URI, NAME) VALUES (1,'Default Hive database','hdfs://localhost:8020/apps/hive/warehouse','default');


DROP TABLE IF EXISTS PARTITIONS;
CREATE TABLE PARTITIONS (
  PART_ID numeric(20) NOT NULL,
  CREATE_TIME integer NOT NULL,
  LAST_ACCESS_TIME integer NOT NULL,
  PART_NAME varchar(767)  DEFAULT NULL,
  SD_ID numeric(20) DEFAULT NULL,
  TBL_ID numeric(20) DEFAULT NULL,
  PRIMARY KEY (PART_ID)
);

INSERT INTO PARTITIONS (PART_ID, CREATE_TIME, LAST_ACCESS_TIME, PART_NAME, SD_ID, TBL_ID) values (1, 1111111, 1111111, '1', 41, 41);
INSERT INTO PARTITIONS (PART_ID, CREATE_TIME, LAST_ACCESS_TIME, PART_NAME, SD_ID, TBL_ID) values (2, 1111111, 1111111, '1', 42, 42);

DROP TABLE IF EXISTS PARTITION_KEYS;
CREATE TABLE PARTITION_KEYS (
  TBL_ID numeric(20) NOT NULL,
  PKEY_COMMENT varchar(4000)  DEFAULT NULL,
  PKEY_NAME varchar(128)  NOT NULL,
  PKEY_TYPE varchar(767)  NOT NULL,
  INTEGER_IDX integer NOT NULL,
  PRIMARY KEY (TBL_ID,PKEY_NAME)
);

INSERT INTO PARTITION_KEYS (TBL_ID, PKEY_NAME, PKEY_TYPE, INTEGER_IDX) VALUES (41, 'p', 'int', 4);
INSERT INTO PARTITION_KEYS (TBL_ID, PKEY_NAME, PKEY_TYPE, INTEGER_IDX) VALUES (42, 'p', 'int', 4);

DROP TABLE IF EXISTS PARTITION_KEY_VALS;
CREATE TABLE PARTITION_KEY_VALS (
  PART_ID numeric(20) NOT NULL,
  PART_KEY_VAL varchar(255)  DEFAULT NULL,
  INTEGER_IDX integer NOT NULL,
  PRIMARY KEY (PART_ID,INTEGER_IDX)
);


DROP TABLE IF EXISTS PARTITION_PARAMS;
CREATE TABLE PARTITION_PARAMS (
  PART_ID numeric(20) NOT NULL,
  PARAM_KEY varchar(256)  NOT NULL,
  PARAM_VALUE varchar(4000)  DEFAULT NULL,
  PRIMARY KEY (PART_ID,PARAM_KEY)
);



DROP TABLE IF EXISTS SDS;
CREATE TABLE SDS (
  SD_ID numeric(20) NOT NULL,
  CD_ID numeric(20) DEFAULT NULL,
  INPUT_FORMAT varchar(4000)  DEFAULT NULL,
  IS_COMPRESSED CHAR(1) NOT NULL,
  IS_STOREDASSUBDIRECTORIES CHAR(1) NOT NULL,
  LOCATION varchar(4000)  DEFAULT NULL,
  NUM_BUCKETS integer NOT NULL,
  OUTPUT_FORMAT varchar(4000)  DEFAULT NULL,
  SERDE_ID numeric(20) DEFAULT NULL,
  PRIMARY KEY (SD_ID)
);


INSERT INTO SDS (SD_ID, CD_ID, INPUT_FORMAT, IS_COMPRESSED, IS_STOREDASSUBDIRECTORIES, LOCATION, NUM_BUCKETS, OUTPUT_FORMAT, SERDE_ID) VALUES (11,11,'org.apache.hadoop.mapred.TextInputFormat','N','N','src/test/resources/data/sample_07.csv',-1,'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat',11);
INSERT INTO SDS (SD_ID, CD_ID, INPUT_FORMAT, IS_COMPRESSED, IS_STOREDASSUBDIRECTORIES, LOCATION, NUM_BUCKETS, OUTPUT_FORMAT, SERDE_ID) VALUES (12,12,'org.apache.hadoop.mapred.TextInputFormat','N','N','hdfs://sandbox.hortonworks.com:8020/apps/hive/warehouse/sample_09/sample_08.csv',-1,'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat',12);
INSERT INTO SDS (SD_ID, CD_ID, INPUT_FORMAT, IS_COMPRESSED, IS_STOREDASSUBDIRECTORIES, LOCATION, NUM_BUCKETS, OUTPUT_FORMAT, SERDE_ID) VALUES (21,21,'org.apache.hadoop.hive.ql.io.orc.OrcInputFormat','N','N','src/test/resources/data/test.orc',-1,'org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat',21);
INSERT INTO SDS (SD_ID, CD_ID, INPUT_FORMAT, IS_COMPRESSED, IS_STOREDASSUBDIRECTORIES, LOCATION, NUM_BUCKETS, OUTPUT_FORMAT, SERDE_ID) VALUES (37,37,'parquet.hive.DeprecatedParquetInputFormat','N','N','src/test/resources/data/test.parquet',-1,'parquet.hive.DeprecatedParquetOutputFormat',37);
INSERT INTO SDS (SD_ID, CD_ID, INPUT_FORMAT, IS_COMPRESSED, IS_STOREDASSUBDIRECTORIES, LOCATION, NUM_BUCKETS, OUTPUT_FORMAT, SERDE_ID) VALUES (41,41,'org.apache.hadoop.mapred.TextInputFormat','N','Y','src/test/resources/data/test.partition/p=1',-1,'parquet.hive.DeprecatedParquetOutputFormat',41);
INSERT INTO SDS (SD_ID, CD_ID, INPUT_FORMAT, IS_COMPRESSED, IS_STOREDASSUBDIRECTORIES, LOCATION, NUM_BUCKETS, OUTPUT_FORMAT, SERDE_ID) VALUES (42,42,'org.apache.hadoop.mapred.TextInputFormat','N','Y','src/test/resources/data/test.partition.rc/p=1',-1,'parquet.hive.DeprecatedParquetOutputFormat',41);


DROP TABLE IF EXISTS SD_PARAMS;
CREATE TABLE SD_PARAMS (
  SD_ID numeric(20) NOT NULL,
  PARAM_KEY varchar(256)  NOT NULL,
  PARAM_VALUE varchar(4000)  DEFAULT NULL,
  PRIMARY KEY (SD_ID,PARAM_KEY)
);



DROP TABLE IF EXISTS SEQUENCE_TABLE;
CREATE TABLE SEQUENCE_TABLE (
  SEQUENCE_NAME varchar(255)  NOT NULL,
  NEXT_VAL numeric(20) NOT NULL,
  PRIMARY KEY (SEQUENCE_NAME)
);


INSERT INTO SEQUENCE_TABLE (SEQUENCE_NAME, NEXT_VAL) VALUES ('org.apache.hadoop.hive.metastore.model.MColumnDescriptor',36);
INSERT INTO SEQUENCE_TABLE (SEQUENCE_NAME, NEXT_VAL) VALUES ('org.apache.hadoop.hive.metastore.model.MDatabase',6);
INSERT INTO SEQUENCE_TABLE (SEQUENCE_NAME, NEXT_VAL) VALUES ('org.apache.hadoop.hive.metastore.model.MPartition',36);
INSERT INTO SEQUENCE_TABLE (SEQUENCE_NAME, NEXT_VAL) VALUES ('org.apache.hadoop.hive.metastore.model.MSerDeInfo',36);
INSERT INTO SEQUENCE_TABLE (SEQUENCE_NAME, NEXT_VAL) VALUES ('org.apache.hadoop.hive.metastore.model.MStorageDescriptor',36);
INSERT INTO SEQUENCE_TABLE (SEQUENCE_NAME, NEXT_VAL) VALUES ('org.apache.hadoop.hive.metastore.model.MTable',36);
INSERT INTO SEQUENCE_TABLE (SEQUENCE_NAME, NEXT_VAL) VALUES ('org.apache.hadoop.hive.metastore.model.MVersionTable',6);

DROP TABLE IF EXISTS SERDES;
CREATE TABLE SERDES (
  SERDE_ID numeric(20) NOT NULL,
  NAME varchar(128)  DEFAULT NULL,
  SLIB varchar(4000)  DEFAULT NULL,
  PRIMARY KEY (SERDE_ID)
);


INSERT INTO SERDES (SERDE_ID, NAME, SLIB) VALUES (11,NULL,'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe');
INSERT INTO SERDES (SERDE_ID, NAME, SLIB) VALUES (12,NULL,'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe');
INSERT INTO SERDES (SERDE_ID, NAME, SLIB) VALUES (21,NULL,'org.apache.hadoop.hive.ql.io.orc.OrcSerde');
INSERT INTO SERDES (SERDE_ID, NAME, SLIB) VALUES (37,NULL,'parquet.hive.serde.ParquetHiveSerDe');
INSERT INTO SERDES (SERDE_ID, NAME, SLIB) VALUES (41,NULL,'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe');
INSERT INTO SERDES (SERDE_ID, NAME, SLIB) VALUES (42,NULL,'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe');

DROP TABLE IF EXISTS SERDE_PARAMS;
CREATE TABLE SERDE_PARAMS (
  SERDE_ID numeric(20) NOT NULL,
  PARAM_KEY varchar(256)  NOT NULL,
  PARAM_VALUE varchar(4000)  DEFAULT NULL,
  PRIMARY KEY (SERDE_ID,PARAM_KEY)
);


INSERT INTO SERDE_PARAMS (SERDE_ID, PARAM_KEY, PARAM_VALUE) VALUES (11,'field.delim','	');
INSERT INTO SERDE_PARAMS (SERDE_ID, PARAM_KEY, PARAM_VALUE) VALUES (11,'serialization.format','	');
INSERT INTO SERDE_PARAMS (SERDE_ID, PARAM_KEY, PARAM_VALUE) VALUES (12,'field.delim','	');
INSERT INTO SERDE_PARAMS (SERDE_ID, PARAM_KEY, PARAM_VALUE) VALUES (12,'serialization.format','	');
INSERT INTO SERDE_PARAMS (SERDE_ID, PARAM_KEY, PARAM_VALUE) VALUES (21,'serialization.format','1');
INSERT INTO SERDE_PARAMS (SERDE_ID, PARAM_KEY, PARAM_VALUE) VALUES (37,'serialization.format','1');
INSERT INTO SERDE_PARAMS (SERDE_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'field.delim','	');
INSERT INTO SERDE_PARAMS (SERDE_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'serialization.format','	');


DROP TABLE IF EXISTS SKEWED_COL_NAMES;
CREATE TABLE SKEWED_COL_NAMES (
  SD_ID numeric(20) NOT NULL,
  SKEWED_COL_NAME varchar(255)  DEFAULT NULL,
  INTEGER_IDX integer NOT NULL,
  PRIMARY KEY (SD_ID,INTEGER_IDX)
);



DROP TABLE IF EXISTS SKEWED_VALUES;
CREATE TABLE SKEWED_VALUES (
  SD_ID_OID numeric(20) NOT NULL,
  STRING_LIST_ID_EID numeric(20) DEFAULT NULL,
  INTEGER_IDX integer NOT NULL,
  PRIMARY KEY (SD_ID_OID,INTEGER_IDX)
);


DROP TABLE IF EXISTS TABLE_PARAMS;
CREATE TABLE TABLE_PARAMS (
  TBL_ID numeric(20) NOT NULL,
  PARAM_KEY varchar(256)  NOT NULL,
  PARAM_VALUE varchar(4000)  DEFAULT NULL,
  PRIMARY KEY (TBL_ID,PARAM_KEY)
);


INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (11,'numFiles','1');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (11,'numPartitions','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (11,'numRows','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (11,'rawDataSize','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (11,'totalSize','46055');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (11,'transient_lastDdlTime','1382974468');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (12,'numFiles','1');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (12,'numPartitions','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (12,'numRows','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (12,'rawDataSize','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (12,'totalSize','46069');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (12,'transient_lastDdlTime','1382974472');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (21,'EXTERNAL','TRUE');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (21,'numFiles','1');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (21,'numPartitions','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (21,'numRows','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (21,'rawDataSize','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (21,'totalSize','309');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (21,'transient_lastDdlTime','1387443819');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (37,'EXTERNAL','TRUE');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (37,'numFiles','1');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (37,'numPartitions','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (37,'numRows','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (37,'rawDataSize','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (37,'totalSize','452');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (37,'transient_lastDdlTime','1396250395');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'EXTERNAL','TRUE');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'numFiles','1');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'numPartitions','1');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'numRows','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'rawDataSize','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'totalSize','46055');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (41,'transient_lastDdlTime','1396250395');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (42,'EXTERNAL','TRUE');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (42,'numFiles','1');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (42,'numPartitions','1');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (42,'numRows','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (42,'rawDataSize','0');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (42,'totalSize','46055');
INSERT INTO TABLE_PARAMS (TBL_ID, PARAM_KEY, PARAM_VALUE) VALUES (42,'transient_lastDdlTime','1396250395');

DROP TABLE IF EXISTS TBLS;
CREATE TABLE TBLS (
  TBL_ID numeric(20) NOT NULL,
  CREATE_TIME integer NOT NULL,
  DB_ID numeric(20) DEFAULT NULL,
  LAST_ACCESS_TIME integer NOT NULL,
  OWNER varchar(767)  DEFAULT NULL,
  RETENTION integer NOT NULL,
  SD_ID numeric(20) DEFAULT NULL,
  TBL_NAME varchar(128)  DEFAULT NULL,
  TBL_TYPE varchar(128)  DEFAULT NULL,
  VIEW_EXPANDED_TEXT mediumtext,
  VIEW_ORIGINAL_TEXT mediumtext,
  PRIMARY KEY (TBL_ID)
);


INSERT INTO TBLS (TBL_ID, CREATE_TIME, DB_ID, LAST_ACCESS_TIME, OWNER, RETENTION, SD_ID, TBL_NAME, TBL_TYPE, VIEW_EXPANDED_TEXT, VIEW_ORIGINAL_TEXT) VALUES (11,1382974463,1,0,'hue',0,11,'sample_07','MANAGED_TABLE',NULL,NULL);
INSERT INTO TBLS (TBL_ID, CREATE_TIME, DB_ID, LAST_ACCESS_TIME, OWNER, RETENTION, SD_ID, TBL_NAME, TBL_TYPE, VIEW_EXPANDED_TEXT, VIEW_ORIGINAL_TEXT) VALUES (12,1382974470,1,0,'hue',0,12,'sample_08','MANAGED_TABLE',NULL,NULL);
INSERT INTO TBLS (TBL_ID, CREATE_TIME, DB_ID, LAST_ACCESS_TIME, OWNER, RETENTION, SD_ID, TBL_NAME, TBL_TYPE, VIEW_EXPANDED_TEXT, VIEW_ORIGINAL_TEXT) VALUES (21,1382974470,1,0,'hue',0,21,'test_orc','EXTERNAL_TABLE',NULL,NULL);
INSERT INTO TBLS (TBL_ID, CREATE_TIME, DB_ID, LAST_ACCESS_TIME, OWNER, RETENTION, SD_ID, TBL_NAME, TBL_TYPE, VIEW_EXPANDED_TEXT, VIEW_ORIGINAL_TEXT) VALUES (37,1396250359,1,0,'hue',0,37,'test_parquet','EXTERNAL_TABLE',NULL,NULL);
INSERT INTO TBLS (TBL_ID, CREATE_TIME, DB_ID, LAST_ACCESS_TIME, OWNER, RETENTION, SD_ID, TBL_NAME, TBL_TYPE, VIEW_EXPANDED_TEXT, VIEW_ORIGINAL_TEXT) VALUES (41,1396250359,1,0,'hue',0,41,'test_partition','EXTERNAL_TABLE',NULL,NULL);
INSERT INTO TBLS (TBL_ID, CREATE_TIME, DB_ID, LAST_ACCESS_TIME, OWNER, RETENTION, SD_ID, TBL_NAME, TBL_TYPE, VIEW_EXPANDED_TEXT, VIEW_ORIGINAL_TEXT) VALUES (42,1396250359,1,0,'hue',0,42,'test_partition_rc','EXTERNAL_TABLE',NULL,NULL);

DROP TABLE IF EXISTS VERSION;
CREATE TABLE VERSION (
  VER_ID numeric(20) NOT NULL,
  SCHEMA_VERSION varchar(127)  NOT NULL,
  VERSION_COMMENT varchar(255)  NOT NULL,
  PRIMARY KEY (VER_ID)
);


INSERT INTO VERSION (VER_ID, SCHEMA_VERSION, VERSION_COMMENT) VALUES (1,'0.12.0','Set by MetaStore');


